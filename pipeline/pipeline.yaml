apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: hello-build
spec:
  params:
    - name: APP_SOURCE_GIT
      type: string
      description: The application git repository
    - name: APP_SOURCE_REVISION
      type: string
      description: The application git branch or sha hash
      default: main
    - name: PACKAGE_NAME
      type: string
      description: The golang package name
    - name: APP_NAME
      type: string
      description: The application name
    - name: DOCKERFILE
      type: string
      description: Dockerfile location
  results:
    - name: APP_IMAGE_DIGEST
      description: The image digest built in the pipeline
      value: $(tasks.build-image.results.IMAGE_DIGEST)
  workspaces:
  - name: workspace
  tasks:
  - name: source-clone
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: workspace
    params:
    - name: url
      value: $(params.APP_SOURCE_GIT)
    - name: revision
      value: $(params.APP_SOURCE_REVISION)
  - name: unit-tests
    taskRef:
      name: golang-test
    runAfter:
      - source-clone
    workspaces:
    - name: source
      workspace: workspace
    params:
      - name: package
        value: "$(params.PACKAGE_NAME)"
      - name: packages
        value: "./"
  - name: build-binary
    taskRef:
      name: golang-build
      kind: ClusterTask
    runAfter:
      - unit-tests
    params:
      - name: package
        value: "$(params.PACKAGE_NAME)"
      - name: packages
        value: "./"
    workspaces:
    - name: source
      workspace: workspace
  - name: build-image
    taskRef:
      name: buildah
      kind: ClusterTask
    runAfter:
      - build-binary
    params:
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.APP_NAME)
    - name: DOCKERFILE
      value: "$(params.DOCKERFILE)"
    workspaces:
    - name: source
      workspace: workspace
